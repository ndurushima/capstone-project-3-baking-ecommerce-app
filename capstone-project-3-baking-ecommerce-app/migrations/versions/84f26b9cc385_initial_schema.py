"""initial schema

Revision ID: 84f26b9cc385
Revises: 
Create Date: 2025-09-28 18:36:15.231582

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '84f26b9cc385'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=2000), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('allergens_csv', sa.String(length=500), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('price >= 0', name='check_price_non_negative'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index('ix_products_active_name', ['is_active', 'name'], unique=False)
        batch_op.create_index(batch_op.f('ix_products_name'), ['name'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('customer', 'admin', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('carts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('draft', 'checked_out', name='cartstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('carts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_carts_user_id'), ['user_id'], unique=False)
        batch_op.create_index('ix_carts_user_status', ['user_id', 'status'], unique=False)

    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('fulfillment_date', sa.Date(), nullable=False),
    sa.Column('requested_time', sa.Time(), nullable=True),
    sa.Column('fulfillment_method', sa.Enum('pickup', 'delivery', name='fulfillmentmethod'), nullable=False),
    sa.Column('delivery_name', sa.String(length=200), nullable=True),
    sa.Column('delivery_line1', sa.String(length=200), nullable=True),
    sa.Column('delivery_line2', sa.String(length=200), nullable=True),
    sa.Column('delivery_city', sa.String(length=100), nullable=True),
    sa.Column('delivery_state', sa.String(length=50), nullable=True),
    sa.Column('delivery_zip', sa.String(length=20), nullable=True),
    sa.Column('status', sa.Enum('placed', 'complete', 'canceled', name='orderstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('total >= 0', name='ck_orders_total_nonneg'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_orders_fulfillment_date'), ['fulfillment_date'], unique=False)
        batch_op.create_index('ix_orders_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_user_id'), ['user_id'], unique=False)
        batch_op.create_index('uq_orders_one_per_day_active', ['fulfillment_date'], unique=True, postgresql_where=sa.text("status IN ('placed','complete')"))

    op.create_table('cart_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cart_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.CheckConstraint('qty > 0', name='ck_cartitem_qty_pos'),
    sa.ForeignKeyConstraint(['cart_id'], ['carts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cart_id', 'product_id', name='uq_cartitem_cart_product')
    )
    with op.batch_alter_table('cart_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cart_items_cart_id'), ['cart_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cart_items_product_id'), ['product_id'], unique=False)

    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('price_snapshot', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.CheckConstraint('price_snapshot >= 0', name='ck_orderitem_price_nonneg'),
    sa.CheckConstraint('qty > 0', name='ck_orderitem_qty_pos'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('order_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_order_items_order_id'), ['order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_order_items_product_id'), ['product_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('order_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_order_items_product_id'))
        batch_op.drop_index(batch_op.f('ix_order_items_order_id'))

    op.drop_table('order_items')
    with op.batch_alter_table('cart_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cart_items_product_id'))
        batch_op.drop_index(batch_op.f('ix_cart_items_cart_id'))

    op.drop_table('cart_items')
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_index('uq_orders_one_per_day_active', postgresql_where=sa.text("status IN ('placed','complete')"))
        batch_op.drop_index(batch_op.f('ix_orders_user_id'))
        batch_op.drop_index('ix_orders_user_created')
        batch_op.drop_index(batch_op.f('ix_orders_fulfillment_date'))

    op.drop_table('orders')
    with op.batch_alter_table('carts', schema=None) as batch_op:
        batch_op.drop_index('ix_carts_user_status')
        batch_op.drop_index(batch_op.f('ix_carts_user_id'))

    op.drop_table('carts')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_name'))
        batch_op.drop_index('ix_products_active_name')

    op.drop_table('products')
    # ### end Alembic commands ###
